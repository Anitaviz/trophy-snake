{"version":3,"file":"js/app.0330bf8c.js","mappings":"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","sources":["webpack://snake/./src/App.vue","webpack://snake/./src/components/PlayField.vue","webpack://snake/./src/classes/Point.js","webpack://snake/./src/Constants.js","webpack://snake/./src/classes/Snake.js","webpack://snake/./src/classes/GameState.js","webpack://snake/./src/components/PlayField.vue?ad28","webpack://snake/./src/components/SidePanel.vue","webpack://snake/./src/components/PanelBox.vue","webpack://snake/./src/components/PanelBox.vue?3540","webpack://snake/./src/components/NumberField.vue","webpack://snake/./src/components/NumberField.vue?a185","webpack://snake/./src/components/LivesField.vue","webpack://snake/./src/components/LivesField.vue?facd","webpack://snake/./src/components/HighScores.vue","webpack://snake/./src/components/HighScores.vue?4507","webpack://snake/./src/classes/SnakeGame.js","webpack://snake/./src/components/SidePanel.vue?ea01","webpack://snake/./src/App.vue?7ccd","webpack://snake/./src/classes/GameClock.js","webpack://snake/./src/classes/SoundManager.js","webpack://snake/./src/classes/Animator.js","webpack://snake/./src/main.js","webpack://snake/webpack/bootstrap","webpack://snake/webpack/runtime/chunk loaded","webpack://snake/webpack/runtime/compat get default export","webpack://snake/webpack/runtime/define property getters","webpack://snake/webpack/runtime/global","webpack://snake/webpack/runtime/hasOwnProperty shorthand","webpack://snake/webpack/runtime/publicPath","webpack://snake/webpack/runtime/jsonp chunk loading","webpack://snake/webpack/startup"],"sourcesContent":["<template>\r\n    <div class=\"playArea\">\r\n        <PlayField />\r\n    </div>\r\n    <div class=\"sidePanel\">\r\n        <SidePanel />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import PlayField from '@/components/PlayField.vue'\r\n    import SidePanel from '@/components/SidePanel.vue'\r\n    import SnakeGame from '@/classes/SnakeGame';\r\n\r\n    export default {\r\n        name: 'SnakeGame',\r\n        components: {\r\n            PlayField,\r\n            SidePanel\r\n        },\r\n        mounted() {\r\n            SnakeGame.init()\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style>\r\n    html {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    body {\r\n        margin: 0px;\r\n        padding: 0px;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    #app {\r\n        font-family: Avenir, Helvetica, Arial, sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        font-family:monospace;\r\n        color: #ffffff;\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: #000000;\r\n        display: flex;\r\n    }\r\n\r\n    .playArea {\r\n        flex-grow: 1;\r\n    }\r\n\r\n    .sidePanel {\r\n        width: 400px;\r\n    }\r\n\r\n    .floatingText {\r\n        position: absolute;\r\n    }\r\n</style>\r\n","<template>\r\n    <div id=\"gameFieldWrapper\">\r\n        <table id=\"gameFieldTable\">\r\n            <tr class=\"gameRow\">\r\n                <td class=\"border\"></td>\r\n                <td v-for=\"x in GAME_AREA_WIDTH\" :key=\"x\" class=\"border\"></td>\r\n                <td class=\"border\"></td>\r\n            </tr>\r\n            <tr v-for=\"y in GAME_AREA_HEIGHT\" :key=\"y\" :id=\"'row_'+y\" class=\"gameRow\">\r\n                <td class=\"border\"></td>\r\n                <td v-for=\"x in GAME_AREA_WIDTH\" :key=\"x\" :id=\"'field_'+y+'_'+x\" :class=\"getFieldClass(x,y)\"></td>\r\n                <td class=\"border\"></td>\r\n            </tr>\r\n            <tr class=\"gameRow\">\r\n                <td class=\"border\"></td>\r\n                <td v-for=\"x in GAME_AREA_WIDTH\" :key=\"x\" class=\"border\"></td>\r\n                <td class=\"border\"></td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { gameState } from '@/classes/GameState';\r\n    import { GAME_AREA_HEIGHT, GAME_AREA_WIDTH } from '@/Constants';\r\n    import Point from '@/classes/Point';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                gameState,\r\n                GAME_AREA_HEIGHT,\r\n                GAME_AREA_WIDTH\r\n            }\r\n        },\r\n        methods: {\r\n            getFieldClass(x, y) {\r\n                const location = new Point(x, y);\r\n                if (gameState.getSnake()?.head.compare(location)) {\r\n                    return 'head';\r\n                }\r\n                if (gameState.getSnake()?.isPointOnSnake(location)) {\r\n                    return 'snake';\r\n                }\r\n                if (gameState.getFood()?.compare(location)) {\r\n                    return 'food';\r\n                }\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    #gameFieldWrapper {\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .gameRow {\r\n        width: 100%;\r\n        height: 20px;\r\n    }\r\n\r\n    .gameRow td {\r\n        width: 20px;\r\n        height: 20px;\r\n    }\r\n\r\n    .gameRow td.snake {\r\n        background-color: white;\r\n    }\r\n\r\n    .gameRow td.border {\r\n        background-color: blue;\r\n    }\r\n\r\n    .gameRow td.food {\r\n        background-color: red;\r\n    }\r\n\r\n    .gameRow td.head {\r\n        background-color: green;\r\n    }\r\n</style>\r\n","/**\r\n * Quick struct to store x,y coordinates\r\n * \r\n * */\r\nclass Point {\r\n    x\r\n    y\r\n\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    toString() {\r\n        return '{' + this.x + ',' + this.y + '}';\r\n    }\r\n    clone() {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    compare(point) {\r\n        if (point.x == undefined || point.y == undefined) {\r\n            throw new Error('Cant compare point to object without x and y fields');\r\n        }\r\n        return this.x == point.x && this.y == point.y;\r\n    }\r\n}\r\nexport default Point;","export const GAME_AREA_WIDTH = 20;\r\nexport const GAME_AREA_HEIGHT = 20;\r\nexport const SNAKE_START_X = 10;\r\nexport const SNAKE_START_Y = 10;\r\nexport const SNAKE_START_DIRECTION = 1;\r\nexport const START_GAME_SPEED = 500;\r\nexport const GAME_MAX_SPEED = 950;\r\nexport const FOOD_SPEED_INCREASE = 10;\r\nexport const FOOD_BASE_VALUE = 10;\r\nexport const MAX_LIVES = 3;\r\nexport const MAX_HIGHSCORES = 10;\r\n","import Point from '@/classes/Point';\r\nimport { SNAKE_START_X, SNAKE_START_Y, SNAKE_START_DIRECTION } from '@/Constants';\r\n\r\n/**\r\n * Stores info about a snake :)\r\n * */\r\nclass Snake {\r\n    direction = SNAKE_START_DIRECTION;\r\n    /**\r\n     * List of points the snake is in.\r\n     * Snake is stored so its head is in position 0 (points[0])\r\n     * since the head is the important part, and this makes it easy to index.\r\n     * */\r\n    points = [new Point(SNAKE_START_X, SNAKE_START_Y)];\r\n    size = 5;\r\n\r\n    static get DIRECTION_UP() {\r\n        return 1;\r\n    }\r\n    static get DIRECTION_RIGHT() {\r\n        return 1 << 1;\r\n    }\r\n    static get DIRECTION_DOWN() {\r\n        return 1 << 2;\r\n    }\r\n    static get DIRECTION_LEFT() {\r\n        return 1 << 3;\r\n    }\r\n\r\n    get size() {\r\n        return this.size;\r\n    }\r\n    get direction() {\r\n        return this.direction;\r\n    }\r\n    get head() {\r\n        return this.points[0].clone();\r\n    }\r\n    set direction(direction) {\r\n        this.direction = direction;\r\n    }\r\n    get points() {\r\n        return this.points.map(point => point.clone() );\r\n    }\r\n    isSnakeEatingSelf() {\r\n        /*\r\n         * Use a set of the snakes points (converted to strings) to quickly check if there are any duplicates\r\n         * since a duplicate means the snake is eating itself\r\n        */\r\n        return new Set(this.points.map(t => { return t.toString() })).size < this.points.length;\r\n    }\r\n    isPointOnSnake(pointToCheck) {\r\n        return !this.points.every(point => { return !point.compare(pointToCheck) });\r\n    }\r\n\r\n    moveSnake() {\r\n        //Clone head of snake as base point for moving\r\n        const new_pos = this.points[0].clone();\r\n\r\n        //Move snake in the direction it is facing\r\n        switch (this.direction) {\r\n            case Snake.DIRECTION_UP:\r\n                new_pos.y--;\r\n                break;\r\n            case Snake.DIRECTION_DOWN:\r\n                new_pos.y++;\r\n                break\r\n            case Snake.DIRECTION_RIGHT:\r\n                new_pos.x++;\r\n                break\r\n            case Snake.DIRECTION_LEFT:\r\n                new_pos.x--;\r\n                break\r\n            default:\r\n                throw new Error('Invalid snake move direction encountered: ' + this.direction + ': ' + this.DIRECTION_UP);\r\n        }\r\n        //Add new location as snake head\r\n        this.points.unshift(new_pos);\r\n\r\n        //If number of points is greater than the size the snake should currently be, remove its tail\r\n        if (this.points.length > this.size) {\r\n            this.points.pop();\r\n        }\r\n\r\n        //Return clone of the heads position to facilitate checking for death, pickups, etc.\r\n        //But prevent changing the location outside this class\r\n        return new_pos.clone();\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Snake;","import { reactive } from 'vue';\r\nimport Snake from '@/classes/Snake'\r\nimport { START_GAME_SPEED, MAX_LIVES } from '@/Constants';\r\n/**\r\n * FIXME: Gamestate init should be set by SnakeGame to allow for different rules/difficulty\r\n * */\r\nexport const gameState = reactive({\r\n    _score: 0,\r\n    _snake: null,\r\n    _speed: START_GAME_SPEED,\r\n    _lives: MAX_LIVES,\r\n    _maxLives: MAX_LIVES,\r\n    _isRunning: false,\r\n    /**\r\n     * FIXME: Food should be an array of pickups instead with a class used to show the pickup\r\n     * and a callback for the effect of the pickup.\r\n     * That way fun stuff can be made like teleporters, room transitions, extra lives etc.\r\n     * */\r\n    _food: null,\r\n    _timeElapsed: 0,\r\n    _startTime: 0,\r\n    _name: null,\r\n    _message: null,\r\n    _gameHasStarted: false,\r\n\r\n    getFood() {\r\n        return this._food;\r\n    },\r\n    setFood(position) {\r\n        this._food = position;\r\n    },\r\n    getScore() {\r\n        return this._score;\r\n    },\r\n    increaseScore(value) {\r\n        this._score += value;\r\n    },\r\n    getSnake() {\r\n        return this._snake;\r\n    },\r\n    setName(name) {\r\n        this._name = name;\r\n    },\r\n    getName() {\r\n        return this._name;\r\n    },\r\n    hasMessage() {\r\n        return this._message !== null;\r\n    },\r\n    getMessage() {\r\n        return this._message;\r\n    },\r\n    setMessage(message) {\r\n        this._message = message;\r\n    },\r\n    clearMessage() {\r\n        this._message = null;\r\n    },\r\n    getSpeed() {\r\n        return 1000 - this._speed;\r\n    },\r\n    setSpeed(newSpeed) {\r\n        this._speed = 1000 - newSpeed;\r\n    },\r\n    isRunning() {\r\n        return this._isRunning;\r\n    },\r\n    getLives() {\r\n        return this._lives;\r\n    },\r\n    getMaxLives() {\r\n        return this._maxLives;\r\n    },\r\n    getTimeElapsed() {\r\n        return this._timeElapsed;\r\n    },\r\n    runGame() {\r\n        this._isRunning = true;\r\n    },\r\n    reset() {\r\n        this._snake = new Snake();\r\n        this._speed = START_GAME_SPEED;\r\n        this._isRunning = false;\r\n        this._startTime = null;\r\n    },\r\n    newGame() {\r\n        this._gameHasStarted = true;\r\n        this._lives = MAX_LIVES;\r\n        this._score = 0;\r\n        this.reset();\r\n    },\r\n    decreaseLives() {\r\n        this._lives -= 1;\r\n    },\r\n    hasGameBeenStarted() {\r\n        return this._gameHasStarted;\r\n    },\r\n    endGame() {\r\n        this._gameHasStarted = false;\r\n        this.reset();\r\n    },\r\n    tick() {\r\n        if (!this._startTime) {\r\n            this._startTime = Math.floor(Date.now() / 1000);\r\n        }\r\n        this._timeElapsed = Math.floor(Date.now() / 1000) - this._startTime;\r\n    }\r\n});","import { render } from \"./PlayField.vue?vue&type=template&id=aabb643c\"\nimport script from \"./PlayField.vue?vue&type=script&lang=js\"\nexport * from \"./PlayField.vue?vue&type=script&lang=js\"\n\nimport \"./PlayField.vue?vue&type=style&index=0&id=aabb643c&lang=css\"\n\nimport exportComponent from \"E:\\\\work\\\\personal\\\\games\\\\Snake\\\\Snake\\\\Snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"SidePanel\">\r\n        <h2 >Snake Game</h2>\r\n        <div class=\"sideBox\">\r\n            <PanelBox v-if=\"!gameIsRunning\">\r\n                <template #header>\r\n                    HIGH SCORES\r\n                </template>\r\n                <HighScores />\r\n            </PanelBox>\r\n            <PanelBox v-if=\"gameIsRunning\">\r\n                <template #header>\r\n                    ROUND TIMER\r\n                </template>\r\n                <NumberField>{{gameState.getTimeElapsed()}}</NumberField>\r\n            </PanelBox>\r\n            <PanelBox v-if=\"gameIsRunning\">\r\n                <template #header>\r\n                    SCORE\r\n                </template>\r\n                <NumberField>{{gameState.getScore()}}</NumberField>\r\n            </PanelBox>\r\n            <PanelBox v-if=\"gameIsRunning\">\r\n                <template #header>\r\n                    SPEED\r\n                </template>\r\n                <NumberField>{{gameState.getSpeed()}}</NumberField>\r\n            </PanelBox>\r\n            <PanelBox v-if=\"gameIsRunning\">\r\n                <template #header>\r\n                    SNAKE LENGTH\r\n                </template>\r\n                <NumberField>{{gameState.getSnake().size}}</NumberField>\r\n            </PanelBox>\r\n            <PanelBox v-if=\"gameIsRunning\">\r\n                <template #header>\r\n                    LIVES\r\n                </template>\r\n                <LivesField :maxLives=\"gameState.getMaxLives()\" :currentLives=\"gameState.getLives()\" />\r\n            </PanelBox>\r\n            <span v-if=\"hasMessage\" class=\"messageArea\">\r\n                <h2>{{gameState.getMessage()}}</h2>\r\n            </span>\r\n            <button v-if=\"!gameIsRunning\" @click=\"startGame\" id=\"startGameButton\">START GAME</button>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import PanelBox from '@/components/PanelBox.vue'\r\n    import NumberField from '@/components/NumberField.vue'\r\n    import LivesField from '@/components/LivesField.vue'\r\n    import HighScores from '@/components/HighScores.vue'\r\n    import SnakeGame from '@/classes/SnakeGame';\r\n    import { gameState } from '@/classes/GameState';\r\n\r\n    export default {\r\n        components: {\r\n            PanelBox,\r\n            NumberField,\r\n            LivesField,\r\n            HighScores\r\n        },\r\n        data() {\r\n            return {\r\n                gameState\r\n            }\r\n        },\r\n        computed: {\r\n            hasMessage() {\r\n                return gameState.hasMessage();\r\n            },\r\n            gameIsRunning() {\r\n                return gameState.hasGameBeenStarted();\r\n            }\r\n        },\r\n        methods: {\r\n            startGame() {\r\n                SnakeGame.newGame();\r\n            },\r\n            startGame2() {\r\n                SnakeGame.startGame();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .SidePanel {\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .SidePanel h2{\r\n        text-align:center;\r\n        font-size: 20pt;\r\n    }\r\n\r\n    .sideBox {\r\n        margin: 10px;\r\n        padding: 10px;\r\n    }\r\n    #startGameButton{\r\n        border-radius: 10px;\r\n        width: 100%;\r\n        height: 60px;\r\n        color:white;\r\n        background-color: black;\r\n        border: 1px solid white;\r\n    }\r\n    #startGameButton:hover {\r\n        background-color: darkgray;\r\n    }\r\n\r\n</style>\r\n","<template>\r\n    <div class=\"panelBox\">\r\n        <div v-if=\"hasHeader\" class=\"header\"><slot name=\"header\"></slot></div>\r\n        <slot />\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            hasHeader() {\r\n                return !!this.$slots['header'];\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n\r\n<style>\r\n    .panelBox {\r\n        border: 1px solid white;\r\n        border-radius: 10px;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .panelBox .header {\r\n        font-weight: bold;\r\n        font-size: 20px;\r\n        text-align:center;\r\n    }\r\n</style>\r\n","import { render } from \"./PanelBox.vue?vue&type=template&id=365e6a1a\"\nimport script from \"./PanelBox.vue?vue&type=script&lang=js\"\nexport * from \"./PanelBox.vue?vue&type=script&lang=js\"\n\nimport \"./PanelBox.vue?vue&type=style&index=0&id=365e6a1a&lang=css\"\n\nimport exportComponent from \"E:\\\\work\\\\personal\\\\games\\\\Snake\\\\Snake\\\\Snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"number\"><slot></slot></div>\r\n</template>\r\n\r\n<script>\r\n    //FIXME: This component is worthless at the moment\r\n    export default {}\r\n</script>\r\n\r\n\r\n<style>\r\n    .number {\r\n        font-family: monospace;\r\n        font-size: 25px;\r\n        text-align: right;\r\n    }\r\n</style>\r\n","import { render } from \"./NumberField.vue?vue&type=template&id=b27ba32c\"\nimport script from \"./NumberField.vue?vue&type=script&lang=js\"\nexport * from \"./NumberField.vue?vue&type=script&lang=js\"\n\nimport \"./NumberField.vue?vue&type=style&index=0&id=b27ba32c&lang=css\"\n\nimport exportComponent from \"E:\\\\work\\\\personal\\\\games\\\\Snake\\\\Snake\\\\Snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"livesField\">\r\n        <img v-for=\"i in maxLives\" :key=\"i\" :id=\"i\" :class=\"i > maxLives - currentLives ? 'full' : 'empty'\">\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'LivesField',\r\n        props: {\r\n            maxLives: {\r\n                type: Number,\r\n                required: true\r\n            },\r\n            currentLives: {\r\n                type: Number,\r\n                required: true\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n\r\n<style>\r\n    .livesField {\r\n        text-align: right;\r\n    }\r\n\r\n    .livesField img {\r\n        height: 20px;\r\n        width: 20px;\r\n        padding: 2px;\r\n    }\r\n\r\n    .livesField img.full {\r\n        content: url(@/assets/heart.png);\r\n    }\r\n\r\n    .livesField img.empty {\r\n        content: url(@/assets/heart_empty.png);\r\n    }\r\n</style>\r\n","import { render } from \"./LivesField.vue?vue&type=template&id=316ed623\"\nimport script from \"./LivesField.vue?vue&type=script&lang=js\"\nexport * from \"./LivesField.vue?vue&type=script&lang=js\"\n\nimport \"./LivesField.vue?vue&type=style&index=0&id=316ed623&lang=css\"\n\nimport exportComponent from \"E:\\\\work\\\\personal\\\\games\\\\Snake\\\\Snake\\\\Snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div v-if=\"scores.length\">\r\n    <table id=\"highScoreBox\">\r\n        <tr v-for=\"(score, index) in scores\" :key=\"index\">\r\n            <td class=\"name\">{{score.name}}</td>\r\n            <td class=\"score\">{{score.value}}</td>\r\n        </tr>\r\n    </table>\r\n    </div>\r\n    <div v-else>\r\n        <h2>No scores yet!</h2>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import eventBus from 'tiny-emitter/instance';\r\n    import { gameState } from '@/classes/GameState';\r\n    import { MAX_HIGHSCORES } from '@/Constants';\r\nexport default {\r\n        data() {\r\n            return {\r\n                scores: []\r\n            }\r\n        },\r\n        mounted() {\r\n            this.scores = localStorage.getItem('scores') ? JSON.parse(localStorage.getItem('scores')) : [];\r\n            /*\r\n             * FIXME: Highscores should not use the game end event, SnakeGame should call it instead\r\n             * */\r\n\r\n            eventBus.on('gameEnd', () => {\r\n                this.scores.push({ name: gameState.getName(), value: gameState.getScore()});\r\n\r\n                this.scores.sort((a,b) => {\r\n                    if(a.value == b.value){\r\n                        return 0;\r\n                    }else if(a.value > b.value){\r\n                        return -1;\r\n                    }else{\r\n                        return 1;\r\n                    }\r\n                })\r\n\r\n                while (this.scores.length > MAX_HIGHSCORES) {\r\n                    this.scores.pop()\r\n                }\r\n\r\n                localStorage.setItem('scores', JSON.stringify(this.scores));\r\n            })\r\n        }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n    #highScoreBox {\r\n        table-layout: fixed;\r\n        width: 100%;\r\n        font-family: monospace;\r\n        font-weight: bold;\r\n        font-size: 15pt;\r\n    }\r\n    .name {\r\n        text-align: left;\r\n        overflow-x: hidden;\r\n        white-space: nowrap;\r\n        width: 60%;\r\n    }\r\n    .score{\r\n        text-align: right;\r\n        width: 40%;\r\n    }\r\n</style>\r\n","import { render } from \"./HighScores.vue?vue&type=template&id=b11db280\"\nimport script from \"./HighScores.vue?vue&type=script&lang=js\"\nexport * from \"./HighScores.vue?vue&type=script&lang=js\"\n\nimport \"./HighScores.vue?vue&type=style&index=0&id=b11db280&lang=css\"\n\nimport exportComponent from \"E:\\\\work\\\\personal\\\\games\\\\Snake\\\\Snake\\\\Snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { gameState } from '@/classes/GameState';\r\nimport Snake from '@/classes/Snake';\r\nimport eventBus from 'tiny-emitter/instance';\r\nimport { GAME_AREA_WIDTH, GAME_AREA_HEIGHT, FOOD_BASE_VALUE, GAME_MAX_SPEED, FOOD_SPEED_INCREASE } from '@/Constants';\r\nimport Point from './Point';\r\n\r\nclass SnakeGame {\r\n\r\n    gameLoop() {\r\n        if (gameState.isRunning()) {\r\n\r\n            //Move snake and get new head position\r\n            const newPosition = gameState.getSnake().moveSnake();\r\n\r\n            //Emit event to allow for sound/animation\r\n            eventBus.emit('snakeMove');\r\n\r\n            //Check if snake is eating itself\r\n            if (gameState.getSnake().isSnakeEatingSelf()) {\r\n                this.die();\r\n                return;\r\n            }\r\n\r\n            //Check if snake is out of bounds\r\n            if (this.isSnakeOutOfBounds(newPosition)) {\r\n                this.die();\r\n                return;\r\n            }\r\n\r\n            if (this.isSnakeEatingFood(newPosition)) {\r\n                //Handle snake eating food and score increase\r\n                const scoreIncrease = Math.floor(FOOD_BASE_VALUE * gameState.getSnake().size);\r\n                gameState.increaseScore(scoreIncrease);\r\n                gameState.getSnake().size += 1;\r\n\r\n                //Emit eatFood event to allow for sound/animation\r\n                eventBus.emit('eatFood', newPosition, scoreIncrease);\r\n\r\n                //Calculate new speed and clamp it to max speed\r\n                gameState.setSpeed(Math.min(gameState.getSpeed() + FOOD_SPEED_INCREASE, GAME_MAX_SPEED));\r\n\r\n                //Create new food;\r\n                gameState.setFood(this.makeFood());\r\n            }\r\n            gameState.tick();\r\n        }\r\n    }\r\n\r\n    init() {\r\n        eventBus.on('tick', () => { this.gameLoop() });\r\n        document.onkeydown = (evt) => {\r\n            eventBus.emit('keyPress', evt);\r\n            if (gameState.isRunning()) {\r\n                this.handleKeyPress(evt);\r\n            }\r\n        };\r\n    }\r\n\r\n    handleKeyPress(keyEvt) {\r\n        //Very simple key controlls\r\n        /**\r\n         * FIXME: It is not enough to check the current direction of the snake,\r\n         * we need to check the direction it last moved, otherwise quick key combos \r\n         * can still make the snake travel in the opposite direction of its last move\r\n         * resulting in insta death.\r\n         * \r\n         * */\r\n        switch (keyEvt.keyCode) {\r\n            case 87:\r\n            case 38:\r\n                if (gameState.getSnake().direction != Snake.DIRECTION_DOWN) {\r\n                    gameState.getSnake().direction = Snake.DIRECTION_UP;\r\n                }\r\n                break;\r\n            case 68:\r\n            case 39:\r\n                if (gameState.getSnake().direction != Snake.DIRECTION_LEFT) {\r\n                    gameState.getSnake().direction = Snake.DIRECTION_RIGHT;\r\n                }\r\n                break;\r\n            case 83:\r\n            case 40:\r\n                if (gameState.getSnake().direction != Snake.DIRECTION_UP) {\r\n                    gameState.getSnake().direction = Snake.DIRECTION_DOWN;\r\n                }\r\n                break;\r\n            case 65:\r\n            case 37:\r\n                if (gameState.getSnake().direction != Snake.DIRECTION_RIGHT) {\r\n                    gameState.getSnake().direction = Snake.DIRECTION_LEFT;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    isSnakeEatingFood(position) {\r\n        return gameState.getFood().compare(position);\r\n    }\r\n\r\n    isSnakeOutOfBounds(position) {\r\n        return position.x <= 0 ||\r\n               position.y <= 0 ||\r\n               position.x >  GAME_AREA_WIDTH ||\r\n               position.y >  GAME_AREA_HEIGHT;\r\n\r\n    }\r\n    newGame() {\r\n        gameState.newGame();\r\n\r\n        eventBus.emit(\"newGame\");\r\n\r\n        gameState.setFood(this.makeFood());\r\n\r\n        this.askForPlayerName()\r\n            .then((playerName) => {\r\n                gameState.setName(playerName);\r\n                return this.askForKeyPress();\r\n            })\r\n            .then(() => {\r\n                this.startGame()\r\n            });\r\n    }\r\n\r\n    askForKeyPress() {\r\n        //FIXME: This should use some kind of animation to show the message in the playArea\r\n        gameState.setMessage('Press any key to start playing');\r\n        return new Promise((resolve) => {\r\n            eventBus.once('keyPress', key => {\r\n                gameState.clearMessage();\r\n                this.handleKeyPress(key)\r\n                resolve(key);\r\n            })\r\n        });\r\n    }\r\n\r\n    askForPlayerName(text) {\r\n        /**\r\n         * FIXME: This should show a nicer input than the browser prompt\r\n         * */\r\n        return new Promise((resolve) => {\r\n            const name = prompt(text ? text : 'What is your name');\r\n            if (name && name != '') {\r\n                resolve(name);\r\n            } else {\r\n                this.askForPlayerName('Invalid name try another one');\r\n            }\r\n        });\r\n    }\r\n\r\n    startGame() {\r\n        gameState.runGame();\r\n    }\r\n\r\n    /**\r\n     * FIXME: Should probably use a list of empty cells and randomize that \r\n     * instead of looping a random position witch will lead to increased misses\r\n     * as the snake fills the play area\r\n     * */\r\n    makeFood() {\r\n        let position = null;\r\n        do {\r\n            position = new Point(\r\n                Math.floor(Math.random() * (GAME_AREA_WIDTH - 1)) + 1,\r\n                Math.floor(Math.random() * (GAME_AREA_HEIGHT - 1)) + 1\r\n            );\r\n        } while (gameState.getSnake().isPointOnSnake(position))\r\n        return position;\r\n    }\r\n\r\n    reset() {\r\n        gameState.reset();\r\n    }\r\n\r\n    die() {\r\n        gameState.decreaseLives();\r\n        if (gameState.getLives() <= 0) {\r\n            //Only do gameover if no more lives are left\r\n            eventBus.emit('gameEnd');\r\n            gameState.endGame();\r\n        } else {\r\n            //If player has more lives emit a snakeDied event to allow for sound, animation etc.\r\n            eventBus.emit('snakeDied');\r\n\r\n            //Reset the game\r\n            this.reset();\r\n\r\n            //And await player input\r\n            this.askForKeyPress().then(() => {\r\n                this.startGame();\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nconst snakeGame = new SnakeGame();\r\nexport default snakeGame;","import { render } from \"./SidePanel.vue?vue&type=template&id=7afb732d\"\nimport script from \"./SidePanel.vue?vue&type=script&lang=js\"\nexport * from \"./SidePanel.vue?vue&type=script&lang=js\"\n\nimport \"./SidePanel.vue?vue&type=style&index=0&id=7afb732d&lang=css\"\n\nimport exportComponent from \"E:\\\\work\\\\personal\\\\games\\\\Snake\\\\Snake\\\\Snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=702c7fcd\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=702c7fcd&lang=css\"\n\nimport exportComponent from \"E:\\\\work\\\\personal\\\\games\\\\Snake\\\\Snake\\\\Snake\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { gameState } from '@/classes/GameState';\r\nimport eventBus from 'tiny-emitter/instance';\r\n\r\n/**\r\n * Game clock uses requestAnimationFrame to calculate delta time\r\n * */\r\nexport default class GameClock {\r\n\r\n    init() {\r\n        this.lastTime = 0;\r\n        this.delta = 0;\r\n        window.requestAnimationFrame(time => this.loop(time));\r\n    }\r\n\r\n    loop(time) {\r\n        if (!this.lastTime) {\r\n            this.lastTime = time;\r\n        } else {\r\n            this.delta += time - this.lastTime;\r\n            this.lastTime = time;\r\n            /**\r\n             * FIXME: Game clock should be decoupled from gameState and just call a tick callback with delta time\r\n             * instead and let that callback control the game speed\r\n             * */\r\n            if (this.delta > 1000 - gameState.getSpeed()) {\r\n                this.delta -= 1000 - gameState.getSpeed();\r\n                eventBus.emit('tick');\r\n            }\r\n        }\r\n        window.requestAnimationFrame(time => this.loop(time));\r\n    }\r\n}","import eventBus from 'tiny-emitter/instance';\r\n\r\nclass SoundManager {\r\n    #sounds = [];\r\n\r\n    init() {\r\n        this.loadSound('eat','eatFood', require('@/assets/eat.mp3'));\r\n        this.loadSound('run','snakeMove', require('@/assets/run.mp3'));\r\n        this.loadSound('death','snakeDied', require('@/assets/death.mp3'));\r\n        this.loadSound('gameOver','gameEnd', require('@/assets/gameOver.mp3'));\r\n    }\r\n\r\n    play(name) {\r\n        if (this.#sounds[name] !== undefined) {\r\n            this.#sounds[name].cloneNode(true).play();\r\n        }\r\n    }\r\n    loadSound(name,event, file) {\r\n        this.#sounds[name] = new Audio(file);\r\n        eventBus.on(event, () => { this.play(name) });\r\n\r\n    }\r\n}\r\n\r\nexport default SoundManager;","import eventBus from 'tiny-emitter/instance';\r\nimport { gsap } from \"gsap\";\r\n\r\nclass Animator {\r\n    init() {\r\n        eventBus.on('eatFood', () => {\r\n           //FIXME: Add floating text with ganied score on food pickup\r\n        });\r\n        eventBus.on('snakeDied', () => {\r\n            gsap.timeline({ repeat: 2 })\r\n                .to(\"#gameFieldTable\", { x: 20, duration: .1 })\r\n                .to(\"#gameFieldTable\", { x: -20, duration: .1 })\r\n                .to(\"#gameFieldTable\", { x: 0, duration: .1 })\r\n                .play();\r\n        });\r\n        eventBus.on('gameEnd', () => {\r\n            gsap.timeline()\r\n                .to(\"#gameFieldTable\", { scale: 0, transformOrigin: \"50% 50%\", duration: 1 })\r\n                .play();\r\n        });\r\n        eventBus.on('newGame', () => {\r\n            gsap.timeline()\r\n                .to(\"#gameFieldTable\", { scale: 1, transformOrigin: \"50% 50%\", duration: 1 })\r\n                .play();\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Animator;","import { createApp } from 'vue'\nimport App from './App.vue'\nimport Clock from '@/classes/GameClock';\nimport SoundManager from '@/classes/SoundManager';\nimport Animator from '@/classes/Animator';\n\nconst gameClock = new Clock();\ngameClock.init();\n\nconst soundManager = new SoundManager();\nsoundManager.init();\n\nconst animator = new Animator();\nanimator.init();\n\nconst app = createApp(App);\n\n\napp.mount('#app');\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksnake\"] = self[\"webpackChunksnake\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1999); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_PlayField","_hoisted_2","_component_SidePanel","id","_createElementBlock","_hoisted_3","_hoisted_4","_Fragment","$data","x","key","_hoisted_5","y","_hoisted_7","$options","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","Point","constructor","this","toString","clone","compare","point","undefined","Error","GAME_AREA_WIDTH","GAME_AREA_HEIGHT","SNAKE_START_X","SNAKE_START_Y","SNAKE_START_DIRECTION","START_GAME_SPEED","GAME_MAX_SPEED","FOOD_SPEED_INCREASE","FOOD_BASE_VALUE","MAX_LIVES","MAX_HIGHSCORES","Snake","DIRECTION_UP","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_LEFT","size","direction","head","points","map","isSnakeEatingSelf","Set","t","length","isPointOnSnake","pointToCheck","every","moveSnake","new_pos","unshift","pop","gameState","reactive","_score","_snake","_speed","_lives","_maxLives","_isRunning","_food","_timeElapsed","_startTime","_name","_message","_gameHasStarted","getFood","setFood","position","getScore","increaseScore","value","getSnake","setName","name","getName","hasMessage","getMessage","setMessage","message","clearMessage","getSpeed","setSpeed","newSpeed","isRunning","getLives","getMaxLives","getTimeElapsed","runGame","reset","newGame","decreaseLives","hasGameBeenStarted","endGame","tick","Math","floor","Date","now","data","methods","getFieldClass","location","__exports__","_createBlock","_component_PanelBox","header","_component_HighScores","_component_NumberField","_component_LivesField","maxLives","currentLives","onClick","_renderSlot","_ctx","computed","hasHeader","$slots","$props","i","props","type","Number","required","_hoisted_6","score","index","scores","mounted","localStorage","getItem","JSON","parse","eventBus","push","sort","a","b","setItem","stringify","SnakeGame","gameLoop","newPosition","die","isSnakeOutOfBounds","isSnakeEatingFood","scoreIncrease","min","makeFood","init","document","onkeydown","evt","handleKeyPress","keyEvt","keyCode","askForPlayerName","then","playerName","askForKeyPress","startGame","Promise","resolve","text","prompt","random","snakeGame","components","PanelBox","NumberField","LivesField","HighScores","gameIsRunning","startGame2","PlayField","SidePanel","render","GameClock","lastTime","delta","window","requestAnimationFrame","time","loop","SoundManager","loadSound","require","play","cloneNode","event","file","Audio","Animator","gsap","repeat","to","duration","scale","transformOrigin","gameClock","Clock","soundManager","animator","app","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}